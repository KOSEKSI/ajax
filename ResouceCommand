package com.tma.user.info.action;

import java.io.IOException;
import java.io.PrintWriter;
import java.lang.invoke.MethodHandles;
import java.util.ArrayList;
import java.util.Enumeration;
import java.util.List;

import javax.naming.Context;
import javax.portlet.PortletContext;
import javax.portlet.PortletRequestDispatcher;
import javax.portlet.ResourceRequest;
import javax.portlet.ResourceResponse;
import javax.servlet.RequestDispatcher;
import javax.servlet.ServletConfig;
import javax.servlet.ServletContext;
import javax.servlet.ServletException;
import javax.servlet.ServletRequest;
import javax.servlet.ServletResponse;
import javax.servlet.http.HttpSession;

import org.osgi.service.component.annotations.Component;

import com.liferay.portal.kernel.json.JSONArray;
import com.liferay.portal.kernel.json.JSONFactoryUtil;
import com.liferay.portal.kernel.json.JSONObject;
import com.liferay.portal.kernel.log.Log;
import com.liferay.portal.kernel.log.LogFactoryUtil;
import com.liferay.portal.kernel.model.User;
import com.liferay.portal.kernel.portlet.bridges.mvc.BaseMVCResourceCommand;
import com.liferay.portal.kernel.portlet.bridges.mvc.MVCResourceCommand;
import com.liferay.portal.kernel.service.UserLocalServiceUtil;
import com.tma.user.info.constants.UserInfoPortletKeys;
import com.tma.user.info.util.UserDetails;

@Component(
        immediate = true,
        property = {
                "javax.portlet.name="+ UserInfoPortletKeys.UserInfo,
                "mvc.command.name=" + UserInfoPortletKeys.FETCH_USERS
        },
        service = MVCResourceCommand.class
)

public class UserInfoResourceCommand extends BaseMVCResourceCommand{
	private static Log logger=LogFactoryUtil.getLog(MethodHandles.lookup().lookupClass());
	@Override
	protected void doServeResource(ResourceRequest req, ResourceResponse res)
			throws Exception {
		
		logger.info("******** Working ********");
			 List<User> userInfo=UserLocalServiceUtil.getUsers(104,115);
			 List<UserDetails> list=new ArrayList<>();
		       JSONArray UList = JSONFactoryUtil.createJSONArray();
		       String text="<table cellpadding='5' cellspacing='5' border='all'><tr><th>id</th><th>scname</th><th>firstname</th><th>secondname</th><th>fullname</th><th>email</th></tr>";
		        for (User user : userInfo)
		       { 
		        	UserDetails ud=new UserDetails();
		        	ud.setEmail(user.getEmailAddress());
		        	list.add(ud);
		        	JSONObject JSON = JSONFactoryUtil.createJSONObject();
		        	  JSON.put("id", user.getUserId());
			          JSON.put("fname", user.getFirstName());
			          JSON.put("lname", user.getLastName());
			          JSON.put("fullname",user.getFirstName()+" "+user.getLastName());
			          JSON.put("scname", user.getScreenName());
			          JSON.put("email", user.getDisplayEmailAddress());
			          UList.put(JSON);
		        	
		      }
		        text=text+"</table>";
		       //req.setAttribute("userinfo",UList);
		       //req.setAttribute("userinfo2",UList);
		      // res.getWriter().write(UList.toJSONString());
		       res.getWriter().write(UList.toString());
		       HttpSession session=(HttpSession) req.getPortletSession();
		       session.setAttribute("userinfo", list);
		       logger.info("******** End ********");
		       //logger.info("session id::"+req.getRequestedSessionId());
		      
		       /*PortletRequestDispatcher pd= getPortletRequestDispatcher(req, "/view.jsp");
		       pd.forward(req, res);*/
		       
		       
		
	}



}
